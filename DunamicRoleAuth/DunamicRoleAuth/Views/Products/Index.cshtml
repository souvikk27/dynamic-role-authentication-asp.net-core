@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService
@using DunamicRoleAuth.Data
@model IEnumerable<DunamicRoleAuth.Models.Product>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Create)).Result.Succeeded)
    {
        <a asp-action="Create">Create New</a>
    }
    
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductType)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ProductType)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Edit)).Result.Succeeded)
                    {
                        <a asp-action="Edit" asp-route-id="@item.ProductId">Edit</a>
                    } 
                    
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.View)).Result.Succeeded)
                    {
                        <a asp-action="Details" asp-route-id="@item.ProductId">Details</a> 
                    } 
                    @if ((AuthorizationService.AuthorizeAsync(User, Permissions.Products.Delete)).Result.Succeeded)
                    {
                        <a asp-action="Delete" asp-route-id="@item.ProductId">Delete</a>
                    } 
                    
            </td>
        </tr>
}
    </tbody>
</table>
